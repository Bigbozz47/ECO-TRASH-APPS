// Generated by view binder compiler. Do not edit!
package com.example.nasabahbanksampah.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nasabahbanksampah.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRiwayatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPoin;

  @NonNull
  public final Button btnSampah;

  @NonNull
  public final Button btnSemua;

  @NonNull
  public final LinearLayout filterButtons;

  @NonNull
  public final RecyclerView recyclerRiwayat;

  private FragmentRiwayatBinding(@NonNull LinearLayout rootView, @NonNull Button btnPoin,
      @NonNull Button btnSampah, @NonNull Button btnSemua, @NonNull LinearLayout filterButtons,
      @NonNull RecyclerView recyclerRiwayat) {
    this.rootView = rootView;
    this.btnPoin = btnPoin;
    this.btnSampah = btnSampah;
    this.btnSemua = btnSemua;
    this.filterButtons = filterButtons;
    this.recyclerRiwayat = recyclerRiwayat;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRiwayatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRiwayatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_riwayat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRiwayatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPoin;
      Button btnPoin = ViewBindings.findChildViewById(rootView, id);
      if (btnPoin == null) {
        break missingId;
      }

      id = R.id.btnSampah;
      Button btnSampah = ViewBindings.findChildViewById(rootView, id);
      if (btnSampah == null) {
        break missingId;
      }

      id = R.id.btnSemua;
      Button btnSemua = ViewBindings.findChildViewById(rootView, id);
      if (btnSemua == null) {
        break missingId;
      }

      id = R.id.filterButtons;
      LinearLayout filterButtons = ViewBindings.findChildViewById(rootView, id);
      if (filterButtons == null) {
        break missingId;
      }

      id = R.id.recyclerRiwayat;
      RecyclerView recyclerRiwayat = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRiwayat == null) {
        break missingId;
      }

      return new FragmentRiwayatBinding((LinearLayout) rootView, btnPoin, btnSampah, btnSemua,
          filterButtons, recyclerRiwayat);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
