// Generated by view binder compiler. Do not edit!
package com.example.nasabahbanksampah.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nasabahbanksampah.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRiwayatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView riwayatDeskripsi;

  @NonNull
  public final ImageView riwayatIcon;

  @NonNull
  public final TextView riwayatJumlah;

  @NonNull
  public final TextView riwayatTanggal;

  private ItemRiwayatBinding(@NonNull LinearLayout rootView, @NonNull TextView riwayatDeskripsi,
      @NonNull ImageView riwayatIcon, @NonNull TextView riwayatJumlah,
      @NonNull TextView riwayatTanggal) {
    this.rootView = rootView;
    this.riwayatDeskripsi = riwayatDeskripsi;
    this.riwayatIcon = riwayatIcon;
    this.riwayatJumlah = riwayatJumlah;
    this.riwayatTanggal = riwayatTanggal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRiwayatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRiwayatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_riwayat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRiwayatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.riwayatDeskripsi;
      TextView riwayatDeskripsi = ViewBindings.findChildViewById(rootView, id);
      if (riwayatDeskripsi == null) {
        break missingId;
      }

      id = R.id.riwayatIcon;
      ImageView riwayatIcon = ViewBindings.findChildViewById(rootView, id);
      if (riwayatIcon == null) {
        break missingId;
      }

      id = R.id.riwayatJumlah;
      TextView riwayatJumlah = ViewBindings.findChildViewById(rootView, id);
      if (riwayatJumlah == null) {
        break missingId;
      }

      id = R.id.riwayatTanggal;
      TextView riwayatTanggal = ViewBindings.findChildViewById(rootView, id);
      if (riwayatTanggal == null) {
        break missingId;
      }

      return new ItemRiwayatBinding((LinearLayout) rootView, riwayatDeskripsi, riwayatIcon,
          riwayatJumlah, riwayatTanggal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
